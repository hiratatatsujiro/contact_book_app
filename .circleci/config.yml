version: 2
jobs:
  build:
    working_directory: ~/app
    docker:
      - image: circleci/ruby:2.6.5-node-browsers
        environment:
          BUNDLE_JOBS: 3
          BUNDLE_RETRY: 3
          BUNDLE_PATH: vendor/bundle
          RAILS_ENV: test
          DATABASE_HOST: '127.0.0.1'
          DATABASE_USER: 'root'
      - image: circleci/mysql:5.7
        env:
          MYSQL_ALLOW_EMPTY_PASSWORD: 'yes'
          MYSQL_HOST: '%'
    steps:
      - checkout

      - run:
          name: Which bundler?
          command: bundle -v

      - restore_cache:
          keys:
            - cache-gem-{{ checksum "Gemfile.lock" }}
            - cache-gem-

      - run:
          name: Bundle Install
          command: bundle check || bundle install

      - save_cache:
          key: cache-gem-{{ checksum "Gemfile.lock" }}
          paths:
            - vendor/bundle

      - restore_cache:
          keys:
            - cache-yarn-{{ checksum "yarn.lock" }}
            - cache-yarn-

      - run:
          name: Yarn Install
          command: yarn install --cache-folder ~/.cache/yarn

      - save_cache:
          key: cache-yarn-{{ checksum "yarn.lock" }}
          paths:
            - ~/.cache/yarn

      - run:
          name: Database create
          command: bin/rails db:create --trace

      - run:
          name: Database setup
          command: bin/rails db:schema:load --trace

      - run:
          name: Run webpack build
          command: bin/webpack

      - run:
          name: Run rubocop
          command: bundle exec rubocop

      - run:
          name: Run rspec
          command: |
            bundle exec rspec --profile 10 \
                              --out test_results/rspec.xml \
                              --format progress \
                              $(circleci tests glob "spec/**/*_spec.rb" | circleci tests split --split-by=timings)

      - deploy:
          name: Deploy
          command: |
            if [ "${CIRCLE_BRANCH}" = "develop" ]; then
              bundle exec cap staging deploy
            fi